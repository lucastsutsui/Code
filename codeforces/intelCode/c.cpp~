#include <bits/stdc++.h>
using namespace std;

typedef struct{
  long long int x;
  pair<int,int> range;
}Seg;

class Compare{
 public:
  bool operator() (Seg &a, Seg &b){
    return a.x > b.x;
  }
};

int ft[112345];
int n;

int rsq(int b){
  int sum=0;
  for (; b; b -= (b&(-b))) sum += ft[b];
  return sum;
}

int rsq2(int a, int b){
  return rsq(b) - (a==1 ? 0 : rsq(a-1));
}

void adjust (int k, int v){
  for (; k <= n; k += (k&(-k))) ft[k] += v;
}

int main ()
{
  int num;
  int a[112345], v[112345];
  Seg aux;
  priority_queue<Seg, vector<Seg>, Compare> pq;

  cin >> n;

  for (int i = 0; i < n; i++){
    cin >> a[i];
    adjust(i+1, 0);
  }

  long long int sum=0;
  for (int i = 0; i < n; i++){
    cin >> v[i];
    sum += a[i];
  }

  aux.x = sum;
  aux.range = make_pair(1,n+1);
  pq.push(aux);

  for (int i = 0; i < n; i++){
    adjust(v[i], 1);

    while (pq.size() && rsq2(pq.top().range.first, pq.top().range.second))
      pq.pop();

    if (pq.size()) cout << pq.top().x << endl;
    else cout << 0 << endl;
  }

  return 0;
}
