#include <bits/stdc++.h>
#define TAM 5000
#define ND 1000
#define ATTEMPT 100
#define WRONG 2000
using namespace std;

int tested=0;
int k;
bitset<TAM+1> disc;
bitset<TAM+1> curr;

void send (){
  if (tested >= ATTEMPT) return;
  tested++;
  for (int i = 0; i < TAM; i++) cout << curr[i]; cout << endl; fflush(stdout);
  cin >> k;
  disc[k-1] = 1;
  curr[k-1] = (~curr[k-1]);
}

void test (){
  for (int i = 0; i < ATTEMPT; i++){
    int ans = k;
    for (int j = i*((TAM-ND)/ATTEMPT); j < (i+1)*((TAM-ND)/ATTEMPT); j++)
      if (disc[j] == 0) curr[j] = (~curr[j]);
    send();
    if (k < ans)
      for (int j = i*((TAM-ND)/ATTEMPT); j < (i+1)*((TAM-ND)/ATTEMPT); j++)
	if (disc[j] == 0) curr[j] = (~curr[j]);
  }  
}

int main ()
{
  srand(12345);

  for (int i = 0; i < TAM; i++){
    curr[i] = rand()%2;
    disc[i] = 0;
  }
  send ();
  
  test();

  return 0;
}
